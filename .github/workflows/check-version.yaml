# .github/workflows/check-version-update.yml
#
# Fails a PR / push if:
#   – any “core” file in a sub-graph folder changes AND
#   – the version field in that sub-graph’s package.json stays the same
#
# “Core” files = src/**, schema.graphql, subgraph.yaml(+template)

name: Check Version Update

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
jobs:
  check-version-update:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        subgraph:
          - bonds
          - carbonmark
          - protocol-metrics
          - vesting
          - user-carbon
          - pairs
          - celo-bridged-carbon
          - ethereum-bridged-carbon
          - polygon-digital-carbon

    steps:
      # ────────────────────────────────────────────────────────────────
      # 0. Checkout and choose the HEAD commit we’re validating
      # ────────────────────────────────────────────────────────────────
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Select HEAD SHA (PR vs push)
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "HEAD_SHA=${{ github.event.pull_request.head.sha }}" >> "$GITHUB_ENV"
          else
            echo "HEAD_SHA=${{ github.sha }}" >> "$GITHUB_ENV"
          fi

      - name: Fetch main branch for comparison
        run: git fetch origin main:main

      # ────────────────────────────────────────────────────────────────
      # 1. Detect changes inside the current sub-graph folder
      # ────────────────────────────────────────────────────────────────
      - name: Detect core / package changes in ${{ matrix.subgraph }}
        id: detect
        env:
          SG: ${{ matrix.subgraph }}
        shell: bash
        run: |
          ALL_CHANGED=$(git diff --name-only origin/main "$HEAD_SHA" -- "$SG/" || true)

          # Flag if package.json changed
          if echo "$ALL_CHANGED" | grep -qx "$SG/package.json"; then
            echo "pkg_changed=true" >> "$GITHUB_ENV"
          else
            echo "pkg_changed=false" >> "$GITHUB_ENV"
          fi

          # Flag if any “core” file changed
          CORE_REGEX="^$SG/(src/|schema\.graphql$|subgraph\.yaml$|subgraph\.template\.yaml$)"
          if echo "$ALL_CHANGED" | grep -E "$CORE_REGEX" -q; then
            echo "core_changed=true" >> "$GITHUB_ENV"
          else
            echo "core_changed=false" >> "$GITHUB_ENV"
          fi

          # Persist full file list for optional debugging
          echo "all_changed<<EOF"  >> "$GITHUB_ENV"
          echo "$ALL_CHANGED"       >> "$GITHUB_ENV"
          echo "EOF"                >> "$GITHUB_ENV"

      # ────────────────────────────────────────────────────────────────
      # 2. Fail if core files changed but version didn’t bump
      # ────────────────────────────────────────────────────────────────
      - name: Enforce version bump
        if: env.core_changed == 'true'
        env:
          SG: ${{ matrix.subgraph }}
        shell: bash
        run: |
          BASE_V=$(git show origin/main:$SG/package.json | jq -r .version)
          NEW_V=$(git show "$HEAD_SHA":$SG/package.json | jq -r .version)

          echo "Base version: $BASE_V"
          echo "New  version: $NEW_V"

          if [[ "$BASE_V" == "$NEW_V" ]]; then
            echo "::error file=$SG/package.json,title=Version bump required::Core files changed but version field stayed $BASE_V"
            exit 1
          else
            echo "✅  Version correctly bumped → $NEW_V"
          fi

      # ────────────────────────────────────────────────────────────────
      # 3. Skip messages
      # ────────────────────────────────────────────────────────────────
      - name: Skip – only package.json updated
        if: env.core_changed == 'false' && env.pkg_changed == 'true'
        run: |
          echo "🟢  Only ${{ matrix.subgraph }}/package.json changed — version bump not required."

      - name: Skip – no changes in this sub-graph
        if: env.core_changed == 'false' && env.pkg_changed == 'false'
        run: |
          echo "🟢  No changes in ${{ matrix.subgraph }} — nothing to check."
