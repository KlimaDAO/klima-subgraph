type DailyBond @entity {
  id: ID!
  bondVersion: String!
  timestamp: BigInt!
  token: String!
  payout: BigDecimal!
  daoFee: BigDecimal!
  tokenValue: BigDecimal!
  carbonCustodied: BigDecimal!
  BCV: BigInt!
}

type Bonder @entity {
  id: ID!
  deposits: [Deposit!] @derivedFrom(field: "bonder")
  redeems: [Redemption!] @derivedFrom(field: "bonder")
  totalKlimaBonded: BigDecimal!
  totalCarbonCustodied: BigDecimal!
  totalKlimaMintedForDao: BigDecimal!
}

type Deposit @entity {
  id: ID!
  bondVersion: String!
  token: String!
  market: Market
  depositOwnershipChanges: [DepositOwnershipChange!] @derivedFrom(field: "deposit")
  transaction: Transaction!
  bonder: Bonder!
  payout: BigDecimal!
  daoFee: BigDecimal!
  bondPrice: BigDecimal!
  marketPrice: BigDecimal!
  discount: BigDecimal!
  tokenValue: BigDecimal!
  carbonCustodied: BigDecimal!
  expirationDate: BigInt!
  startDate: BigInt!
  endDate: BigInt!
  timestamp: BigInt!
}

type Redemption @entity {
  id: ID!
  transaction: Transaction
  bonder: Bonder!
  token: String
  payout: BigDecimal!
  payoutRemaining: BigDecimal!
  timestamp: BigInt!
}

type Transaction @entity {
  id: ID!
  timestamp: BigInt!
  blockNumber: BigInt!
  from: Bytes!
  to: Bytes
}

type Market @entity {
  id: ID!
  term: Term!
  baseToken: String!
  baseTokenAddress: Bytes!
  quoteToken: String!
  quoteTokenAddress: Bytes!
  initialCapacity: BigDecimal!
  maxPayout: BigDecimal!
  purchased: BigDecimal!
  sold: BigDecimal!
  isActive: Boolean!
}

type Term @entity {
  id: ID!
  market: Market!
  isFixedTerm: Boolean!
  termExpiration: BigInt!
  conclusion: BigInt!
  controlVariable: BigInt!
}

type DepositOwnershipChange @entity {
  id: ID!
  deposit: Deposit!
  fromAddress: Bytes!
  toAddress: Bytes!
  startDate: BigInt!
  endDate: BigInt!
}
