type ProtocolMetric @entity {
  id: ID!
  timestamp: BigInt!
  klimaCirculatingSupply: BigDecimal!
  sKlimaCirculatingSupply: BigDecimal!
  totalKlimaInLP: BigDecimal!
  totalKlimaUnstaked: BigDecimal!
  treasuryUSDCInLP: BigDecimal
  treasuryBalanceUSDC: BigDecimal
  treasuryBalanceKLIMA: BigDecimal
  daoBalanceUSDC: BigDecimal
  daoBalanceKLIMA: BigDecimal
  totalSupply: BigDecimal!
  klimaPrice: BigDecimal!
  marketCap: BigDecimal!
  totalValueLocked: BigDecimal!
  assets: [TreasuryAsset!]
  treasuryCarbonCustodied: BigDecimal!
  treasuryMarketValue: BigDecimal!
  nextEpochRebase: BigDecimal!
  nextDistributedKlima: BigDecimal!
  treasuryCarbon: BigDecimal!
  currentAKR: BigDecimal!
  runwayCurrent: BigDecimal!
  klimaIndex: BigDecimal!
  holders: BigInt!
}

type TreasuryAsset @entity {
  id: ID!
  timestamp: BigInt!
  token: String!
  tokenBalance: BigDecimal!
  carbonBalance: BigDecimal!
  carbonCustodied: BigDecimal!
  marketValue: BigDecimal!
  POL: BigDecimal!
}

type Aux @entity {
  id: ID!
  value: BigInt!
}

type Transaction @entity {
  id: ID!
  timestamp: BigInt!
  blockNumber: BigInt!
  from: Bytes!
  to: Bytes
}

type Epoch @entity {
  id: ID!
  epochNumber: BigInt!
  blockFrom: BigInt!
  blockFromTimestamp: BigInt!
  blockTo: BigInt!
  blockToTimestamp: BigInt!
  duration: BigInt!
  prevAvgRebaseRate: BigDecimal!
}
