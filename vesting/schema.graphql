type Lock @entity {
  id: ID!
  timestamp: BigInt!
  token: String!
  platform: String!
  contractAddress: Bytes!
  stakerAddress: Bytes!
  startedAt: BigInt!
  maturityDate: BigInt!
  lockedInSeconds: BigInt!
  lockedAmount: BigDecimal!
}

type Unlock @entity {
  id: ID!
  timestamp: BigInt!
  token: String!
  platform: String!
  contractAddress: Bytes!
  stakerAddress: Bytes!
  maturityDate: BigInt!
  amount: BigDecimal!
}

type VestingMetric @entity {
  id: ID!
  timestamp: BigInt!
  platform: String!
  token: String!
  contractAddress: String!
  dailyLockCount: BigInt! #Aggregated count of lock events for a particular day and token via platform (eg Token = WSKLIMA; Platform = C3)
  dailyLockAmount: BigDecimal! #Aggregated locked amount -||-
  dailyUnlockCount: BigInt! #Aggregated count of unlock events -||-
  dailyUnlockAmount: BigDecimal! #Aggregated unlocked amount -||-
  dailyMaturityCount: BigInt! #Aggregated count of lock period endings -||-
  dailyMaturityAmount: BigDecimal! #Aggregated amount of lock period endings -||-
  totalAmountLocked: BigDecimal! #Total amount of locked tokens -||-
  totalSupply: BigDecimal! #Total supply of locked tokens -||-
  index: BigDecimal!
  inFuture: Boolean! #Returns if the given metric is for the future date or not
}

type SubgraphVersion @entity {
  id: ID!
  schemaVersion: String!
  publishedVersion: String!
}
